# -*- coding: utf-8 -*-
"""clustering.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kz0UFnbe2ovLRd6sTMawzhVgy2HDXBIT
"""

!pip install pycaret &> /dev/null
print ("Pycaret installed sucessfully!!")

from pycaret.utils import version
version()

import pandas as pd

# Load the dataset
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data'
df = pd.read_csv(url, header=None, names=['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class'])

print(df.head())

from pycaret.clustering import *
kMeanClusteringParameters = setup(df)

KMeanClusteringModel = create_model('kmeans', num_clusters=3)

kMeanPrediction = assign_model(KMeanClusteringModel)
kMeanPrediction

kMeanPrediction.to_csv("KMeanResult.csv")
print("Result file save sucessfully!!")

x = save_model(KMeanClusteringModel, 'kMeanClusteringModelFile')

newData= df.iloc[:10]

newPredictions = predict_model(KMeanClusteringModel, data = newData)
newPredictions

newPredictions.to_csv("NewPredictions.csv")
print("Result file save sucessfully!!")

evaluate_model(KMeanClusteringModel)

plot_model(KMeanClusteringModel, plot='cluster')

plot_model(KMeanClusteringModel, plot = 'elbow')

plot_model(KMeanClusteringModel, plot = 'silhouette')

plot_model(KMeanClusteringModel, plot = 'distribution')

plot_model(KMeanClusteringModel, plot = 'distance')

print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)

"""# using normalisation

"""

setup(data = df, normalize = True, normalize_method = 'zscore', verbose=False)
x = create_model('hclust')
plot_model(x, plot = 'elbow')

setup(data = df, normalize = True, normalize_method = 'zscore', verbose=False)
print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)

"""# Using Transformation

"""

setup(data = df, transformation = True, transformation_method = 'yeo-johnson', verbose=False)
x = create_model('hclust')
plot_model(x, plot = 'elbow')

setup(data = df, transformation = True, transformation_method = 'yeo-johnson', verbose=False)
print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)

"""# Using PCA"""

setup(data = df, pca= True, pca_method = 'linear', verbose=False)
x = create_model('hclust')
plot_model(x, plot = 'elbow')

setup(data = df, pca= True, pca_method = 'linear', verbose=False)
print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)

"""# normalisation and transformation

"""

setup(data = df, transformation = True, transformation_method = 'yeo-johnson',normalize=True,normalize_method='zscore' , verbose=False)
x = create_model('hclust')
plot_model(x, plot = 'elbow')

setup(data = df, transformation = True, transformation_method = 'yeo-johnson',normalize=True,normalize_method='zscore' , verbose=False)
print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)

"""# **Normalization+ Transformation + PCA**"""

setup(data = df, transformation = True, transformation_method = 'yeo-johnson',normalize=True,normalize_method='zscore' ,pca=True,pca_method='linear', verbose=False)
x = create_model('hclust')
plot_model(x, plot = 'elbow')

setup(data = df, transformation = True, transformation_method = 'yeo-johnson',normalize=True,normalize_method='zscore' ,pca=True,pca_method='linear', verbose=False)
print("For Cluster = 3")
x = create_model('hclust', num_clusters = 3)

print("For Cluster = 4")
x = create_model('hclust', num_clusters = 4)

print("For Cluster = 5")
x = create_model('hclust', num_clusters = 5)

print("For Cluster = 6")
x = create_model('hclust', num_clusters = 6)





